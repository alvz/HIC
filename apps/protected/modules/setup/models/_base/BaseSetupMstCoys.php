<?php

/**
 * This is the model base class for the table "setup_mst_coys".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "SetupMstCoys".
 *
 * Columns in table "setup_mst_coys" available as properties of the model,
 * followed by relations of table "setup_mst_coys" available as properties of the model.
 *
 * @property string $v_company_code
 * @property string $v_company_group
 * @property string $v_inst_type
 * @property string $v_company_name
 * @property string $v_regn_no
 * @property string $v_short_name
 * @property string $v_jenis_usaha
 * @property string $v_mobilitas
 * @property string $v_office_hours
 * @property integer $n_existing_agent
 * @property string $v_comp_add1
 * @property string $v_comp_add2
 * @property string $v_comp_add3
 * @property string $v_postcode
 * @property string $v_town
 * @property string $v_state_code
 * @property string $v_country_code
 * @property string $v_phone1
 * @property string $v_phone2
 * @property string $v_fax
 * @property string $v_email
 * @property string $v_contact_person
 * @property string $v_created_by
 * @property string $d_created_date
 * @property string $v_updated_by
 * @property string $d_updated_date
 *
 * @property PolMstPolis[] $polMstPolises
 * @property SetupMstAgents $nExistingAgent
 */
abstract class BaseSetupMstCoys extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'setup_mst_coys';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'SetupMstCoys|SetupMstCoys', $n);
	}

	public static function representingColumn() {
		return 'v_inst_type';
	}

	public function rules() {
		return array(
			array('v_company_code, v_inst_type, v_company_name', 'required'),
			array('n_existing_agent', 'numerical', 'integerOnly'=>true),
			array('v_company_code, v_postcode', 'length', 'max'=>20),
			array('v_company_group, v_office_hours, v_contact_person', 'length', 'max'=>50),
			array('v_inst_type', 'length', 'max'=>10),
			array('v_company_name', 'length', 'max'=>500),
			array('v_regn_no, v_short_name, v_comp_add1, v_comp_add2, v_comp_add3', 'length', 'max'=>100),
			array('v_jenis_usaha, v_mobilitas, v_town, v_state_code, v_country_code, v_phone1, v_phone2, v_fax, v_created_by, v_updated_by', 'length', 'max'=>30),
			array('v_email', 'length', 'max'=>80),
			array('d_created_date, d_updated_date', 'safe'),
			array('v_company_group, v_regn_no, v_short_name, v_jenis_usaha, v_mobilitas, v_office_hours, n_existing_agent, v_comp_add1, v_comp_add2, v_comp_add3, v_postcode, v_town, v_state_code, v_country_code, v_phone1, v_phone2, v_fax, v_email, v_contact_person, v_created_by, d_created_date, v_updated_by, d_updated_date', 'default', 'setOnEmpty' => true, 'value' => null),
			array('v_company_code, v_company_group, v_inst_type, v_company_name, v_regn_no, v_short_name, v_jenis_usaha, v_mobilitas, v_office_hours, n_existing_agent, v_comp_add1, v_comp_add2, v_comp_add3, v_postcode, v_town, v_state_code, v_country_code, v_phone1, v_phone2, v_fax, v_email, v_contact_person, v_created_by, d_created_date, v_updated_by, d_updated_date', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'polMstPolises' => array(self::HAS_MANY, 'PolMstPolis', 'v_company_code'),
			'nExistingAgent' => array(self::BELONGS_TO, 'SetupMstAgents', 'n_existing_agent'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'v_company_code' => Yii::t('app', 'Company Code'),
			'v_company_group' => Yii::t('app', 'Company Group'),
			'v_inst_type' => Yii::t('app', 'Inst Type'),
			'v_company_name' => Yii::t('app', 'Company Name'),
			'v_regn_no' => Yii::t('app', 'Regn No'),
			'v_short_name' => Yii::t('app', 'Short Name'),
			'v_jenis_usaha' => Yii::t('app', 'Jenis Usaha'),
			'v_mobilitas' => Yii::t('app', 'Mobilitas'),
			'v_office_hours' => Yii::t('app', 'Office Hours'),
			'n_existing_agent' => Yii::t('app','Existing Agent'),
			'v_comp_add1' => Yii::t('app', 'Comp Add1'),
			'v_comp_add2' => Yii::t('app', 'Comp Add2'),
			'v_comp_add3' => Yii::t('app', 'Comp Add3'),
			'v_postcode' => Yii::t('app', 'Postcode'),
			'v_town' => Yii::t('app', 'Town'),
			'v_state_code' => Yii::t('app', 'State Code'),
			'v_country_code' => Yii::t('app', 'Country Code'),
			'v_phone1' => Yii::t('app', 'Phone1'),
			'v_phone2' => Yii::t('app', 'Phone2'),
			'v_fax' => Yii::t('app', 'Fax'),
			'v_email' => Yii::t('app', 'Email'),
			'v_contact_person' => Yii::t('app', 'Contact Person'),
			'v_created_by' => Yii::t('app', 'Created By'),
			'd_created_date' => Yii::t('app', 'Created Date'),
			'v_updated_by' => Yii::t('app', 'Updated By'),
			'd_updated_date' => Yii::t('app', 'Updated Date'),
			'polMstPolises' => Yii::t('app','PolMstPolises'),
			'nExistingAgent' => Yii::t('app','NExistingAgent'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('v_company_code', $this->v_company_code, true);
		$criteria->compare('v_company_group', $this->v_company_group, true);
		$criteria->compare('v_inst_type', $this->v_inst_type, true);
		$criteria->compare('v_company_name', $this->v_company_name, true);
		$criteria->compare('v_regn_no', $this->v_regn_no, true);
		$criteria->compare('v_short_name', $this->v_short_name, true);
		$criteria->compare('v_jenis_usaha', $this->v_jenis_usaha, true);
		$criteria->compare('v_mobilitas', $this->v_mobilitas, true);
		$criteria->compare('v_office_hours', $this->v_office_hours, true);
		$criteria->compare('n_existing_agent', $this->n_existing_agent);
		$criteria->compare('v_comp_add1', $this->v_comp_add1, true);
		$criteria->compare('v_comp_add2', $this->v_comp_add2, true);
		$criteria->compare('v_comp_add3', $this->v_comp_add3, true);
		$criteria->compare('v_postcode', $this->v_postcode, true);
		$criteria->compare('v_town', $this->v_town, true);
		$criteria->compare('v_state_code', $this->v_state_code, true);
		$criteria->compare('v_country_code', $this->v_country_code, true);
		$criteria->compare('v_phone1', $this->v_phone1, true);
		$criteria->compare('v_phone2', $this->v_phone2, true);
		$criteria->compare('v_fax', $this->v_fax, true);
		$criteria->compare('v_email', $this->v_email, true);
		$criteria->compare('v_contact_person', $this->v_contact_person, true);
		$criteria->compare('v_created_by', $this->v_created_by, true);
		$criteria->compare('d_created_date', $this->d_created_date, true);
		$criteria->compare('v_updated_by', $this->v_updated_by, true);
		$criteria->compare('d_updated_date', $this->d_updated_date, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}